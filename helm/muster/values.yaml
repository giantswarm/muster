# Default values for muster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: gsoci.azurecr.io
  repository: giantswarm/muster
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

# Security context for the pod - runs as non-root user 1000
podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  fsGroup: 1000

# Security context for the container - secure defaults with read-only filesystem
securityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop:
    - ALL

service:
  type: ClusterIP
  port: 8090

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: muster.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: muster-tls
  #    hosts:
  #      - muster.local

# Resource limits and requests - mandatory for kube-linter
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Health checks for muster application
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

# Horizontal Pod Autoscaler - disabled for now
# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  # Required for read-only filesystem - writable temp directory
  - name: tmp
    emptyDir: {}
  # Configuration volume for muster
  - name: config
    emptyDir: {}

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  # Required for read-only filesystem
  - name: tmp
    mountPath: /tmp
  # Configuration mount for muster
  - name: config
    mountPath: /config

nodeSelector: {}

tolerations: []

affinity: {}

# CiliumNetworkPolicy configuration
ciliumNetworkPolicy:
  # Enable CiliumNetworkPolicy creation
  enabled: false
  
  # Ingress rules - allow traffic from external sources to muster
  ingress:
    enabled: true
    rules:
      # Allow ingress from world to muster service port
      - fromEntities:
          - "world"
        toPorts:
          - ports:
              - port: "8090"
                protocol: "TCP"
      # Allow ingress from cluster for internal communication
      - fromEntities:
          - "cluster"
        toPorts:
          - ports:
              - port: "8090"
                protocol: "TCP"

  # Egress rules - allow muster to communicate with external MCPServers
  egress:
    enabled: true
    rules:
      # Allow egress to world for remote MCPServers (HTTP/HTTPS)
      - toEntities:
          - "world"
        toPorts:
          - ports:
              - port: "80"
                protocol: "TCP"
              - port: "443"
                protocol: "TCP"
      # Allow DNS resolution
      - toEndpoints:                              
        - matchLabels:                            
            k8s:io.kubernetes.pod.namespace: kube-system
            k8s:k8s-app: coredns
        - matchLabels:                            
            k8s:io.kubernetes.pod.namespace: kube-system
            k8s:k8s-app: k8s-dns-node-cache
        toPorts:                                  
        - ports:                                  
          - port: "53"                            
            protocol: UDP                         
          - port: "1053"                          
            protocol: UDP                         
          - port: "53"                            
            protocol: TCP                         
          - port: "1053"                          
            protocol: TCP
      # Allow communication within cluster (for Kubernetes API, other services)
      - toEntities:
          - "cluster"

# Muster specific configuration
muster:
  # Configuration for the aggregator service
  aggregator:
    port: 8090
    host: "0.0.0.0"
    transport: "streamable-http"
    enabled: true
    musterPrefix: "x"

  # Configuration path inside the container
  configPath: "/config"

  # Debug mode
  debug: false

  # Yolo mode - disables denylist (use with caution)
  yolo: false

# RBAC configuration
rbac:
  # Create RBAC resources
  create: true
  # Rules for muster to manage its CRDs and other resources
  rules:
    # Core resources
    - apiGroups: [""]
      resources: ["pods", "services", "endpoints", "nodes", "namespaces", "configmaps", "secrets"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

    # Apps resources
    - apiGroups: ["apps"]
      resources: ["deployments", "replicasets", "statefulsets", "daemonsets"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

    # Muster CRDs
    - apiGroups: ["muster.giantswarm.io"]
      resources: ["mcpservers", "serviceclasses", "workflows"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

    # Extensions for custom resources
    - apiGroups: ["apiextensions.k8s.io"]
      resources: ["customresourcedefinitions"]
      verbs: ["get", "list", "watch"]
