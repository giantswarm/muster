apiVersion: muster.giantswarm.io/v1alpha1
kind: ServiceClass
metadata:
  name: mimir-port-forward
  namespace: default
spec:
  description: "Provides Mimir/Prometheus access via port forwarding on management cluster"
  args:
    managementCluster:
      type: "string"
      description: "Management cluster name (e.g., 'gazelle')"
      required: true
    localPort:
      type: "string"
      description: "Local port for forwarding"
      required: false
      default:
        raw: '"18000"'
  serviceConfig:
    serviceType: "PortForward"
    lifecycleTools:
      start:
        tool: "x_kubernetes_port_forward"
        args:
          namespace:
            raw: '"mimir"'
          resourceName:
            raw: '"mimir-query-frontend"'
          resourceType:
            raw: '"service"'
          ports:
            raw: '["{{.localPort}}:8080"]'
          kubeContext:
            raw: '"teleport.giantswarm.io-{{.managementCluster}}"'
        outputs:
          sessionId: "sessionId"
      stop:
        tool: "x_kubernetes_stop_port_forward_session"
        args:
          sessionId:
            raw: '"{{.sessionId}}"'
      healthCheck:
        tool: "x_prometheus_execute_query"
        args:
          prometheus_url:
            raw: '"http://localhost:{{.localPort}}/prometheus"'
          query:
            raw: '"up limit 1"'
        expect:
          success: true
    healthCheck:
      enabled: true
      interval: "5s"
      failureThreshold: 5
      successThreshold: 1
    outputs:
      prometheusUrl: "http://localhost:{{.localPort}}/prometheus"
      sessionId: "{{.start.sessionId}}"