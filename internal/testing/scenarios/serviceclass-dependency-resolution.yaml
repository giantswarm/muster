name: "serviceclass-dependency-resolution-scenarios"
category: "behavioral"
concept: "serviceclass"
tags: ["serviceclass", "dependencies", "core-api"]
timeout: "5m"

pre_configuration:
  mcp_servers:
    - name: "tool-provider-a"
      config:
        tools:
          - name: "tool-a"
            responses: [ { response: { status: "ok" } } ]
    - name: "tool-provider-b"
      config:
        tools:
          - name: "tool-b"
            responses: [ { response: { status: "ok" } } ]

steps:
- id: "create-sc-with-tool-dependency"
  description: "Create ServiceClass with tool dependency"
  tool: "core_serviceclass_create"
  args:
    name: "sc-with-tool-dep"
    version: "1.0.0"
    serviceConfig:
      serviceType: "test-service"
      lifecycleTools:
        start:
          tool: "x_tool-provider-a_tool-a"
        stop:
          tool: "x_tool-provider-b_tool-b"
  expected:
    success: true

- id: "check-sc-availability"
  tool: "core_serviceclass_available"
  args:
    name: "sc-with-tool-dep"
  expected:
    success: true
    json_path:
      available: true

- id: "create-sc-with-unmet-tool-dependency"
  description: "Create ServiceClass with unmet tool dependency"
  tool: "core_serviceclass_create"
  args:
    name: "sc-with-unmet-dep"
    version: "1.0.0"
    serviceConfig:
      serviceType: "test-service"
      lifecycleTools:
        start:
          tool: "x_tool-provider-a_tool-a"
        stop:
          tool: "x_tool-provider-a_tool-b"
  expected:
    success: true

- id: "check-sc-unavailable"
  tool: "core_serviceclass_available"
  args:
    name: "sc-with-unmet-dep"
  expected:
    success: true
    json_path:
      available: false

- id: "cleanup-created-serviceclasses"
  tool: "core_serviceclass_delete"
  args:
    name: "sc-with-tool-dep"
  expected:
    success: true

- id: "cleanup-unmet-dep-serviceclass"
  tool: "core_serviceclass_delete"
  args:
    name: "sc-with-unmet-dep"
  expected:
    success: true 