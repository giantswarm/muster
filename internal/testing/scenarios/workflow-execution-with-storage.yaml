name: "workflow-execution-with-storage"
category: "behavioral"
concept: "workflow"
tags: ["workflow", "execution", "tracking", "storage"]
timeout: "3m"

pre_configuration:
  mcp_servers:
  - name: "echo-provider"
    config:
      tools:
      - name: "echo"
        responses: [ { echo: "{{ .text }}" } ]

steps:
- id: "create-storage-workflow"
  tool: "core_workflow_create"
  args:
    name: "storage-tracking-workflow"
    args:
        service_name:
          type: "string"
          default: "storage-service"
    steps:
      - id: "initial_services"
        tool: "x_echo-provider_echo"
        args: { text: "initial_services" }
        store: true
      - id: "config_data"
        tool: "x_echo-provider_echo"
        args: { text: "config_data" }
        store: true
      - id: "workflows_data"
        tool: "x_echo-provider_echo"
        args: { text: "workflows_data" }
        store: true
  expected:
    success: true
  cleanup:
    - tool: "core_workflow_delete"
      args: { name: "storage-tracking-workflow" }

- id: "create-non-storage-workflow"
  tool: "core_workflow_create"
  args:
    name: "non-storage-workflow"
    args:
        service_name:
          type: "string"
          default: "storage-service"
    steps:
      - id: "initial_services"
        tool: "x_echo-provider_echo"
        args: { text: "initial_services" }
      - id: "config_data"
        tool: "x_echo-provider_echo"
        args: { text: "config_data" }
      - id: "workflows_data"
        tool: "x_echo-provider_echo"
        args: { text: "workflows_data" }
  expected:
    success: true
  cleanup:
    - tool: "core_workflow_delete"
      args: { name: "storage-tracking-workflow" }

- id: "execute-storage-workflow"
  tool: "workflow_storage-tracking-workflow"
  args:
    service_name: "storage-test-service"
  expected:
    success: true
    json_path:
      status: "completed"
      workflow: "storage-tracking-workflow"
      "results.initial_services.status": "completed"
      "results.config_data.status": "completed"
      "results.workflows_data.status": "completed"

- id: "execute-non-storage-workflow"
  tool: "workflow_non-storage-workflow"
  args:
    service_name: "non-storage-test-service"
  expected:
    success: true
    json_path:
      status: "completed"
      workflow: "non-storage-workflow"
      "results.initial_services.status": "completed"
      "results.config_data.status": "completed"
      "results.workflows_data.status": "completed"

- id: "verify-stored-values-tracked"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ execute-storage-workflow.execution_id }}"
  expected:
    success: true
    contains: ["initial_services", "config_data", "workflows_data"]

- id: "verify-step-storage-metadata"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ execute-storage-workflow.execution_id }}"
    step_id: "initial_services"
  expected:
    success: true
    contains: ["initial_services"]

- id: "verify-all-stored-values"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ execute-storage-workflow.execution_id }}"
    include_steps: true
  expected:
    success: true
    contains: ["initial_services", "config_data", "workflows_data"]

cleanup:
- id: "final-cleanup-workflow"
  tool: "core_workflow_delete"
  args: { name: "storage-tracking-workflow" }
  expected:
    success: true 