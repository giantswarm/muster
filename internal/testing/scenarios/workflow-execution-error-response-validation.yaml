name: "workflow-execution-error-response-validation"
category: "behavioral"
concept: "workflow"
tags: ["workflow", "execution", "error", "response", "validation"]
timeout: "3m"

pre_configuration:
  mcp_servers:
    - name: "error-validation-mock"
      config:
        tools:
          - name: "validation_fail"
            input_schema:
              type: "object"
              properties:
                error_type:
                  type: "string"
                  default: "validation"
            responses:
              - error: "Validation test error: {{ .error_type }}"

steps:
- id: "create-error-validation-workflow"
  tool: "core_workflow_create"
  args:
    name: "error-validation-workflow"
    inputSchema:
      type: "object"
      properties:
        error_type:
          type: "string"
          default: "test"
      required: []
    steps:
      - id: "success_step"
        tool: "core_service_list"
        store: "success_result"
      - id: "failing_step"
        tool: "x_error-validation-mock_validation_fail"
        args:
          error_type: "{{ .input.error_type }}"
        store: "fail_result"
      - id: "unreachable_step"
        tool: "core_workflow_list"
        store: "unreachable_result"
  expected:
    success: true
  cleanup:
    - id: "cleanup-workflow-after-create"
      tool: "core_workflow_delete"
      args: { name: "error-validation-workflow" }

- id: "execute-failing-workflow"
  tool: "workflow_error-validation-workflow"
  args:
    error_type: "structured-test"
  expected:
    success: false
    error_contains: ["Validation test error", "structured-test"]
  store: "failed_execution"

# Validate failed execution response structure (as per issue #16)
- id: "validate-failed-execution-structure"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ failed_execution.execution_id }}"
  expected:
    success: true
    contains: [
      "execution_id", "workflow_name", "error-validation-workflow", 
      "status", "failed", "started_at", "completed_at", "duration_ms",
      "input", "error", "steps"
    ]

# Validate error field contains proper error information
- id: "validate-error-field-content"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ failed_execution.execution_id }}"
  expected:
    success: true
    contains: [
      "error", "Validation test error", "structured-test"
    ]

# Validate failed step structure
- id: "validate-failed-step-structure"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ failed_execution.execution_id }}"
    step_id: "failing_step"
  expected:
    success: true
    contains: [
      "step_id", "failing_step", "tool", "x_error-validation-mock_validation_fail",
      "status", "failed", "started_at", "completed_at", "duration_ms",
      "input", "error", "Validation test error", "structured-test"
    ]

# Validate successful step has no error field
- id: "validate-successful-step-no-error"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ failed_execution.execution_id }}"
    step_id: "success_step"
  expected:
    success: true
    contains: [
      "success_step", "status", "completed", "result", "success_result"
    ]
    not_contains: ['"error":', '"error": ']  # Should not have step-level error field

# Validate that unreachable steps are not executed
- id: "validate-unreachable-step-not-executed"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ failed_execution.execution_id }}"
    step_id: "unreachable_step"
  expected:
    success: false
    error_contains: ["step not found", "unreachable_step"]

# Validate overall failed workflow status
- id: "validate-workflow-failed-status"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ failed_execution.execution_id }}"
  expected:
    success: true
    contains: [
      "status", "failed",  # Basic status check
      "error"  # Failed executions should have error field
    ]

# Validate failed execution in list results
- id: "validate-failed-execution-in-list"
  tool: "core_workflow_execution_list"
  args:
    workflow_name: "error-validation-workflow"
    status: "failed"
  expected:
    success: true
    contains: [
      "error-validation-workflow", "failed", "execution_id"
    ]

# Validate mixed status filtering works
- id: "validate-failed-status-filtering"
  tool: "core_workflow_execution_list"
  args:
    status: "failed"
    limit: 10
  expected:
    success: true
    contains: ["failed"]

# Validate error information preservation in steps array
- id: "validate-error-in-steps-array"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ failed_execution.execution_id }}"
    include_steps: true
  expected:
    success: true
    contains: [
      "steps", "failing_step", "failed", "error", 
      "success_step", "completed"
    ]

# Validate summary without steps still shows error
- id: "validate-error-in-summary"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ failed_execution.execution_id }}"
    include_steps: false
  expected:
    success: true
    contains: [
      "execution_id", "status", "failed", "error", 
      "Validation test error", "structured-test"
    ]
    not_contains: ["steps"]

# Validate input is preserved even in failed execution
- id: "validate-input-preserved-in-failure"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ failed_execution.execution_id }}"
  expected:
    success: true
    contains: [
      "input", "error_type", "structured-test"
    ]

# Validate timing information is present for failed execution
- id: "validate-timing-in-failed-execution"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ failed_execution.execution_id }}"
  expected:
    success: true
    contains: [
      "started_at", "completed_at", "duration_ms"
    ]

# Validate that result field behavior in failed execution
- id: "validate-result-field-in-failure"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ failed_execution.execution_id }}"
  expected:
    success: true
    # Result field should be present but may be null or contain partial results

cleanup:
- id: "final-cleanup-workflow"
  tool: "core_workflow_delete"
  args: { name: "error-validation-workflow" }
  expected:
    success: true 