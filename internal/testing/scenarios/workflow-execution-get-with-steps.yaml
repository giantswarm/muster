name: "workflow-execution-get-with-steps"
category: "behavioral"
concept: "workflow"
tags: ["workflow", "execution", "get", "steps"]
timeout: "3m"

steps:
- id: "create-steps-workflow"
  tool: "core_workflow_create"
  args:
    name: "steps-test-workflow"
    args:
        service_name:
          type: "string"
          default: "test-service"
    steps:
      - id: "services_data"
        tool: "core_service_list"
        store: true
      - id: "workflows_data"
        tool: "core_workflow_list"
        store: true
      - id: "config_data"
        tool: "core_config_get"
        store: true
  expected:
    success: true
  cleanup:
    - tool: "core_workflow_delete"
      args: { name: "steps-test-workflow" }

- id: "execute-steps-workflow"
  tool: "workflow_steps-test-workflow"
  args:
    service_name: "steps-service"
  expected:
    success: true

- id: "get-execution-with-steps-explicit"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ execute-steps-workflow.execution_id }}"
    include_steps: true
  expected:
    success: true
    contains: ["steps", "services_data", "workflows_data", "config_data"]

- id: "verify-all-step-details"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ execute-steps-workflow.execution_id }}"
    include_steps: true
  expected:
    success: true
    contains: ["step_id", "tool", "status", "started_at", "duration_ms", "input"]

- id: "verify-step-storage-info"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ execute-steps-workflow.execution_id }}"
    include_steps: true
  expected:
    success: true
    contains: ["services_data", "workflows_data", "config_data"]

- id: "verify-step-tool-mapping"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ execute-steps-workflow.execution_id }}"
    include_steps: true
  expected:
    success: true
    contains: ["core_service_list", "core_workflow_list", "core_config_get"]

- id: "verify-step-execution-order"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ execute-steps-workflow.execution_id }}"
    include_steps: true
  expected:
    success: true
    contains: ["services_data", "workflows_data", "config_data"]

- id: "verify-step-status"
  tool: "core_workflow_execution_get"
  args:
    execution_id: "{{ execute-steps-workflow.execution_id }}"
    include_steps: true
  expected:
    success: true
    contains: ["completed"]

cleanup:
- id: "final-cleanup-workflow"
  tool: "core_workflow_delete"
  args: { name: "steps-test-workflow" }
  expected:
    success: true 