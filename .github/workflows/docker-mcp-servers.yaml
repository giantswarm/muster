name: Build MCP Server Docker Images

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'docker/mcp-servers/**'
      - '.github/workflows/docker-mcp-servers.yaml'
  pull_request:
    paths:
      - 'docker/mcp-servers/**'
      - '.github/workflows/docker-mcp-servers.yaml'
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/mcp-server

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        server: [kubernetes, prometheus, grafana]
    
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.server }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: docker/mcp-servers/${{ matrix.server }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Test image (if built)
        if: github.event_name == 'pull_request'
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.server }}:pr-${{ github.event.pull_request.number }} --version || echo "No version command available" 