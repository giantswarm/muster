# Example MCP Server Configurations

# Git tools MCP server (stdio)
apiVersion: muster.giantswarm.io/v1alpha1
kind: MCPServer
metadata:
  name: git-tools
  namespace: default
spec:
  type: stdio
  autoStart: true
  command: npx
  args: ["@modelcontextprotocol/server-git"]
  env:
    GIT_ROOT: "/workspace"
    LOG_LEVEL: "info"
  description: "Git tools MCP server for repository operations"

---
# Filesystem tools MCP server (stdio)
apiVersion: muster.giantswarm.io/v1alpha1
kind: MCPServer
metadata:
  name: filesystem-tools
  namespace: default
spec:
  type: stdio
  autoStart: false
  command: npx
  args: ["@modelcontextprotocol/server-filesystem", "/workspace"]
  env:
    LOG_LEVEL: "debug"
  description: "Filesystem tools MCP server for file operations"

---
# Python tools MCP server (stdio)
apiVersion: muster.giantswarm.io/v1alpha1
kind: MCPServer
metadata:
  name: python-tools
  namespace: default
spec:
  type: stdio
  autoStart: true
  command: python
  args: ["-m", "mcp_server.example"]
  env:
    PYTHONPATH: "/usr/local/lib/python3.9/site-packages"
    DEBUG: "true"
  description: "Python-based MCP server providing custom tools"

---
# Remote MCP server (streamable-http)
apiVersion: muster.giantswarm.io/v1alpha1
kind: MCPServer
metadata:
  name: remote-api-tools
  namespace: default
spec:
  type: streamable-http
  url: "https://api.example.com/mcp"
  timeout: 30
  headers:
    Authorization: "Bearer your-token-here"
    Content-Type: "application/json"
  description: "Remote MCP server providing API tools"

---
# Remote MCP server (sse)
apiVersion: muster.giantswarm.io/v1alpha1
kind: MCPServer
metadata:
  name: remote-sse-tools
  namespace: default
spec:
  type: sse
  url: "https://sse.example.com/mcp"
  timeout: 60
  headers:
    Authorization: "Bearer your-token-here"
  toolPrefix: "remote_"
  description: "Remote MCP server with SSE transport" 
