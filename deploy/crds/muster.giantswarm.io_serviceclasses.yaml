/*
Copyright 2025 Giant Swarm.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/ ---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: serviceclasses.muster.giantswarm.io
spec:
  group: muster.giantswarm.io
  names:
    kind: ServiceClass
    listKind: ServiceClassList
    plural: serviceclasses
    shortNames:
    - sc
    singular: serviceclass
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.serviceConfig.serviceType
      name: ServiceType
      type: string
    - jsonPath: .status.available
      name: Available
      type: boolean
    - jsonPath: .status.requiredTools
      name: RequiredTools
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceClass is the Schema for the serviceclasses API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServiceClassSpec defines the desired state of ServiceClass
            properties:
              args:
                additionalProperties:
                  description: ArgDefinition defines validation and metadata for service
                    arguments
                  properties:
                    default:
                      description: Default provides a default value if the argument
                        is not specified.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    description:
                      description: Description explains the purpose and usage of this
                        argument.
                      maxLength: 500
                      type: string
                    required:
                      default: false
                      description: Required indicates whether this argument must be
                        provided.
                      type: boolean
                    type:
                      description: Type specifies the expected data type for this
                        argument.
                      enum:
                      - string
                      - integer
                      - boolean
                      - number
                      - object
                      - array
                      type: string
                  required:
                  - type
                  type: object
                description: Args defines the argument schema for service instantiation.
                type: object
              description:
                description: Description provides a human-readable description of
                  this ServiceClass.
                maxLength: 1000
                type: string
              serviceConfig:
                description: ServiceConfig defines the core service configuration
                  template.
                properties:
                  defaultName:
                    description: DefaultName provides a template for generating service
                      instance names.
                    type: string
                  dependencies:
                    description: Dependencies lists other ServiceClasses that must
                      be available.
                    items:
                      type: string
                    type: array
                  healthCheck:
                    description: HealthCheck configures health monitoring for service
                      instances.
                    properties:
                      enabled:
                        default: false
                        description: Enabled controls whether health checking is active.
                        type: boolean
                      failureThreshold:
                        default: 3
                        description: FailureThreshold sets the number of failures
                          before marking unhealthy.
                        minimum: 1
                        type: integer
                      interval:
                        default: 30s
                        description: Interval specifies how often to perform health
                          checks.
                        pattern: ^[0-9]+(ns|us|ms|s|m|h)$
                        type: string
                      successThreshold:
                        default: 1
                        description: SuccessThreshold sets the number of successes
                          to mark healthy.
                        minimum: 1
                        type: integer
                    type: object
                  lifecycleTools:
                    description: LifecycleTools defines the tools for service lifecycle
                      management.
                    properties:
                      healthCheck:
                        description: HealthCheck tool configuration for health checking.
                        properties:
                          args:
                            additionalProperties:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            description: Args provides arguments for the tool execution
                              (supports templating).
                            type: object
                          expect:
                            description: Expect defines positive health check expectations.
                            properties:
                              jsonPath:
                                additionalProperties:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                description: JSONPath defines JSON path conditions
                                  to check in the result.
                                type: object
                              success:
                                description: Success indicates whether the tool call
                                  should succeed.
                                type: boolean
                            type: object
                          expectNot:
                            description: ExpectNot defines negative health check expectations.
                            properties:
                              jsonPath:
                                additionalProperties:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                description: JSONPath defines JSON path conditions
                                  to check in the result.
                                type: object
                              success:
                                description: Success indicates whether the tool call
                                  should succeed.
                                type: boolean
                            type: object
                          tool:
                            description: Tool specifies the name of the tool to execute.
                            minLength: 1
                            type: string
                        required:
                        - tool
                        type: object
                      restart:
                        description: Restart tool configuration for restarting service
                          instances.
                        properties:
                          args:
                            additionalProperties:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            description: Args provides arguments for the tool execution
                              (supports templating).
                            type: object
                          outputs:
                            additionalProperties:
                              type: string
                            description: Outputs maps tool result paths to variable
                              names for later use.
                            type: object
                          tool:
                            description: Tool specifies the name of the tool to execute.
                            minLength: 1
                            type: string
                        required:
                        - tool
                        type: object
                      start:
                        description: Start tool configuration for starting service
                          instances.
                        properties:
                          args:
                            additionalProperties:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            description: Args provides arguments for the tool execution
                              (supports templating).
                            type: object
                          outputs:
                            additionalProperties:
                              type: string
                            description: Outputs maps tool result paths to variable
                              names for later use.
                            type: object
                          tool:
                            description: Tool specifies the name of the tool to execute.
                            minLength: 1
                            type: string
                        required:
                        - tool
                        type: object
                      status:
                        description: Status tool configuration for querying service
                          status.
                        properties:
                          args:
                            additionalProperties:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            description: Args provides arguments for the tool execution
                              (supports templating).
                            type: object
                          outputs:
                            additionalProperties:
                              type: string
                            description: Outputs maps tool result paths to variable
                              names for later use.
                            type: object
                          tool:
                            description: Tool specifies the name of the tool to execute.
                            minLength: 1
                            type: string
                        required:
                        - tool
                        type: object
                      stop:
                        description: Stop tool configuration for stopping service
                          instances.
                        properties:
                          args:
                            additionalProperties:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            description: Args provides arguments for the tool execution
                              (supports templating).
                            type: object
                          outputs:
                            additionalProperties:
                              type: string
                            description: Outputs maps tool result paths to variable
                              names for later use.
                            type: object
                          tool:
                            description: Tool specifies the name of the tool to execute.
                            minLength: 1
                            type: string
                        required:
                        - tool
                        type: object
                    required:
                    - start
                    - stop
                    type: object
                  outputs:
                    additionalProperties:
                      type: string
                    description: Outputs defines template-based outputs for service
                      instances.
                    type: object
                  timeout:
                    description: Timeout configures timeouts for various operations.
                    properties:
                      create:
                        description: Create timeout for service creation operations.
                        pattern: ^[0-9]+(ns|us|ms|s|m|h)$
                        type: string
                      delete:
                        description: Delete timeout for service deletion operations.
                        pattern: ^[0-9]+(ns|us|ms|s|m|h)$
                        type: string
                      healthCheck:
                        description: HealthCheck timeout for individual health check
                          operations.
                        pattern: ^[0-9]+(ns|us|ms|s|m|h)$
                        type: string
                    type: object
                required:
                - lifecycleTools
                - serviceType
                type: object
            required:
            - name
            - serviceConfig
            type: object
          status:
            description: ServiceClassStatus defines the observed state of ServiceClass
            properties:
              available:
                description: Available indicates whether all required tools are available.
                type: boolean
              conditions:
                description: Conditions represent the latest available observations.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              missingTools:
                description: MissingTools lists tools that are currently unavailable.
                items:
                  type: string
                type: array
              requiredTools:
                description: RequiredTools lists all tools needed by this ServiceClass.
                items:
                  type: string
                type: array
              toolAvailability:
                description: ToolAvailability provides detailed tool availability
                  status.
                properties:
                  healthCheckToolAvailable:
                    description: HealthCheckToolAvailable indicates if the health
                      check tool is available.
                    type: boolean
                  restartToolAvailable:
                    description: RestartToolAvailable indicates if the restart tool
                      is available.
                    type: boolean
                  startToolAvailable:
                    description: StartToolAvailable indicates if the start tool is
                      available.
                    type: boolean
                  statusToolAvailable:
                    description: StatusToolAvailable indicates if the status tool
                      is available.
                    type: boolean
                  stopToolAvailable:
                    description: StopToolAvailable indicates if the stop tool is available.
                    type: boolean
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
