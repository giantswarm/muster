---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: mcpservers.muster.giantswarm.io
spec:
  group: muster.giantswarm.io
  names:
    kind: MCPServer
    listKind: MCPServerList
    plural: mcpservers
    shortNames:
    - mcps
    singular: mcpserver
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .spec.url
      name: URL
      type: string
    - jsonPath: .spec.autoStart
      name: AutoStart
      type: boolean
    - jsonPath: .status.state
      name: State
      type: string
    - jsonPath: .status.health
      name: Health
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MCPServer is the Schema for the mcpservers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MCPServerSpec defines the desired state of MCPServer
            properties:
              description:
                description: Description provides a human-readable description of
                  this MCP server's purpose.
                maxLength: 500
                type: string
              type:
                description: |-
                  Type specifies how this MCP server should be executed.
                  Supported values: "stdio" for local processes, "streamable-http" for HTTP-based servers, "sse" for Server-Sent Events
                enum:
                - stdio
                - streamable-http
                - sse
                type: string
              autoStart:
                default: false
                description: |-
                  AutoStart determines whether this MCP server should be automatically started
                  when the muster system initializes or when dependencies become available.
                type: boolean
              command:
                description: |-
                  Command specifies the executable path for stdio type servers.
                  This field is required when Type is "stdio".
                type: string
              args:
                description: |-
                  Args specifies the command line arguments for stdio type servers.
                  This field is only available when Type is "stdio".
                items:
                  type: string
                type: array
              url:
                description: |-
                  URL is the endpoint where the remote MCP server can be reached
                  This field is required when Type is "streamable-http" or "sse".
                  Examples: http://mcp-server:8080/mcp, https://api.example.com/mcp
                pattern: ^https?://[^\s/$.?#].[^\s]*$
                type: string
              env:
                additionalProperties:
                  type: string
                description: |-
                  Env contains environment variables to set for the MCP server.
                  For stdio servers, these are passed to the process when it is started.
                  For remote servers, these can be used for authentication or configuration.
                type: object
              headers:
                additionalProperties:
                  type: string
                description: |-
                  Headers contains HTTP headers to send with requests to remote MCP servers.
                  This field is only relevant when Type is "streamable-http" or "sse".
                type: object
              timeout:
                default: 30
                description: Timeout specifies the connection timeout for remote
                  operations (in seconds)
                maximum: 300
                minimum: 1
                type: integer
              toolPrefix:
                description: |-
                  ToolPrefix is an optional prefix that will be prepended to all tool names
                  provided by this MCP server. This helps avoid naming conflicts when multiple
                  servers provide tools with similar names.
                pattern: ^[a-zA-Z][a-zA-Z0-9_-]*$
                type: string
            required:
            - type
            type: object
          status:
            description: MCPServerStatus defines the observed state of MCPServer
            properties:
              availableTools:
                description: AvailableTools contains a list of tool names provided
                  by this MCP server
                items:
                  type: string
                type: array
              conditions:
                description: Conditions represent the latest available observations
                  of the MCPServer's current state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              health:
                description: Health represents the health status of the MCP server
                enum:
                - unknown
                - healthy
                - unhealthy
                - checking
                type: string
              lastError:
                description: LastError contains any error message from the most recent
                  server operation
                type: string
              state:
                description: State represents the current operational state of the
                  MCP server
                enum:
                - unknown
                - starting
                - running
                - stopping
                - stopped
                - failed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
