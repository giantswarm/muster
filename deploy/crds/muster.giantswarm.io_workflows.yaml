---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: workflows.muster.giantswarm.io
spec:
  group: muster.giantswarm.io
  names:
    kind: Workflow
    listKind: WorkflowList
    plural: workflows
    shortNames:
    - wf
    singular: workflow
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.available
      name: Available
      type: boolean
    - jsonPath: .spec.steps[*].id
      name: Steps
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Workflow is the Schema for the workflows API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: WorkflowSpec defines the desired state of Workflow
            properties:
              args:
                additionalProperties:
                  description: ArgDefinition defines validation and metadata for service
                    arguments
                  properties:
                    default:
                      description: Default provides a default value if the argument
                        is not specified.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    description:
                      description: Description explains the purpose and usage of this
                        argument.
                      maxLength: 500
                      type: string
                    required:
                      default: false
                      description: Required indicates whether this argument must be
                        provided.
                      type: boolean
                    type:
                      description: Type specifies the expected data type for this
                        argument.
                      enum:
                      - string
                      - integer
                      - boolean
                      - number
                      - object
                      - array
                      type: string
                  required:
                  - type
                  type: object
                description: Args defines the argument schema for workflow execution
                  validation.
                type: object
              description:
                description: Description provides a human-readable description of
                  the workflow's purpose.
                maxLength: 1000
                type: string
              steps:
                description: Steps defines the sequence of workflow steps defining
                  the execution flow.
                items:
                  description: WorkflowStep defines a single step in the workflow
                    execution
                  properties:
                    allowFailure:
                      default: false
                      description: AllowFailure defines if in case of an error the
                        next step is executed or not.
                      type: boolean
                    args:
                      additionalProperties:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      description: Args provides arguments for the tool execution
                        (supports templating).
                      type: object
                    condition:
                      description: Condition defines an optional condition that determines
                        whether this step should execute.
                      properties:
                        args:
                          additionalProperties:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          description: Args provides the arguments to pass to the
                            condition tool.
                          type: object
                        expect:
                          description: Expect defines positive health check expectations.
                          properties:
                            jsonPath:
                              additionalProperties:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              description: JsonPath defines JSON path conditions to
                                check in the result.
                              type: object
                            success:
                              description: Success indicates whether the tool call
                                should succeed.
                              type: boolean
                          type: object
                        expectNot:
                          description: ExpectNot defines negative health check expectations.
                          properties:
                            jsonPath:
                              additionalProperties:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              description: JsonPath defines JSON path conditions to
                                check in the result.
                              type: object
                            success:
                              description: Success indicates whether the tool call
                                should succeed.
                              type: boolean
                          type: object
                        fromStep:
                          description: FromStep specifies the step ID to reference
                            for condition evaluation.
                          type: string
                        tool:
                          description: |-
                            Tool specifies the name of the tool to execute for condition evaluation.
                            Optional when FromStep is used.
                          type: string
                      type: object
                    description:
                      description: Description provides human-readable documentation
                        for this step's purpose.
                      maxLength: 500
                      type: string
                    id:
                      description: ID is the unique identifier for this step within
                        the workflow.
                      maxLength: 63
                      pattern: ^[a-zA-Z0-9_-]+$
                      type: string
                    outputs:
                      additionalProperties:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      description: Outputs defines how step results should be stored
                        and made available to subsequent steps.
                      type: object
                    store:
                      default: false
                      description: Store indicates whether to store the step result
                        for use in later steps.
                      type: boolean
                    tool:
                      description: Tool specifies the name of the tool to execute
                        for this step.
                      minLength: 1
                      type: string
                  required:
                  - id
                  - tool
                  type: object
                minItems: 1
                type: array
            required:
            - steps
            type: object
          status:
            description: WorkflowStatus defines the observed state of Workflow
            properties:
              available:
                description: Available indicates whether all required tools for this
                  workflow are available.
                type: boolean
              conditions:
                description: Conditions represent the latest available observations
                  of the workflow's state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              missingTools:
                description: MissingTools lists required tools that are currently
                  unavailable.
                items:
                  type: string
                type: array
              requiredTools:
                description: RequiredTools lists all tools required by workflow steps.
                items:
                  type: string
                type: array
              stepValidation:
                description: StepValidation contains validation results for each workflow
                  step.
                items:
                  description: StepValidationResult contains validation results for
                    a workflow step
                  properties:
                    stepId:
                      description: StepID identifies the workflow step.
                      type: string
                    toolAvailable:
                      description: ToolAvailable indicates whether the required tool
                        is available.
                      type: boolean
                    valid:
                      description: Valid indicates whether the step passed validation.
                      type: boolean
                    validationErrors:
                      description: ValidationErrors contains any validation error
                        messages.
                      items:
                        type: string
                      type: array
                  required:
                  - stepId
                  - toolAvailable
                  - valid
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
